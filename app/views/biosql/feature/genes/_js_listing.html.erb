<div id="gene_listing"></div>

<script type="text/javascript">
Ext.onReady(function(){
	Ext.define('GeneModel', {
	    extend: 'Ext.data.Model',
	    fields: [ 'id','gene_id','locus_tag', 'gene_name', 'start_pos','end_pos','strand','sequence_name','bioentry_id','sequence_version','sequence_taxon', 'sequence_species']
	});
	
	var geneStore = Ext.create('Ext.data.Store', {
	    model: 'GeneModel',
			remoteSort: true,
			remoteFilter: true,
			pageSize : <%= defined?(pagesize) ? pagesize : 25 %>,
	    proxy: {
	        type: 'ajax',
	        url : '<%= genes_path(:format=>:json, :q => params[:q]) %>',
	        reader: {
	            type: 'json',
				      totalProperty: 'total_entries',
	            root: 'gene_models',
	        }
	    },
	    autoLoad: true
	});

	var geneGrid = Ext.create('Ext.grid.Panel', {
	    store: geneStore,
	    title: 'Genes Listing',
		  viewConfig: { forceFit: true },
	    columns: [
	        {
	            text: 'Locus Tag',
	            width: 75,
	            sortable: true,
	            hideable: false,
	            dataIndex: 'locus_tag',
				renderer: function(value, data, record){
					return '<a href="biosql/feature/genes/'+record.data.gene_id+'" target="'+record.gene_id+'">'+value+'</a>'
				}
	        },
	        {
	            text: 'Gene',
	            width: 75,
				sortable: true,
	            dataIndex: 'gene_name'
	        },
	        {
	            text: 'Start',
				width: 70,
	            dataIndex: 'start_pos'
	        },
	        {
	            text: 'End',
				width: 70,
	            dataIndex: 'end_pos'
	        },
			{
				text: 'Strand',
				width: 45,
				dataIndex: 'strand',
				renderer: function(value){
					if(value > 0)
						return '<span style="color:darkgreen">F</span>'
					else
						return '<span style="color:darkred">R</span>'
				}
			},
			{
				text: 'Sequence',
				width: 75,
				sortable: false,
				dataIndex: 'sequence_name',
				renderer : function(value, data, record, rowIdx, colIdx, store, view){
					return '<a href="bioentries/'+record.data.bioentry_id+'?gene_id='+record.data.id+'&pos='+record.data.start_pos+'" target="bioentry_'+record.data.bioentry_id+'">'+value+'</a>'
				}
			},
			{
				text: 'Version',
				width: 50,
				dataIndex: 'sequence_version'
			},
			{
				text: 'Taxon',
				width: 150,
				dataIndex: 'sequence_taxon'
			},
			{
				text: 'Species',
				width: 150,
				sortable: false,
				dataIndex: 'sequence_species',
				renderer : function(value, data, record, rowIdx, colIdx, store, view){
					return '<i>'+value+'</i>'
				}
			},

	    ],
			dockedItems: [{
	        xtype: 'pagingtoolbar',
	        store: geneStore,   // same store GridPanel is using
	        dock: 'bottom',
	        displayInfo: true
	    }]
	});
	Ext.create('Ext.panel.Panel', {
		renderTo: 'gene_listing',
		layout: 'fit',
		height: <%= height %>,
		resizable: true,
		items:[
			geneGrid
		]
	});
});
</script>