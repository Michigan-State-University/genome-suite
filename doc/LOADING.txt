----------------
General Process for New Data
----------------
Load Sequence
-Identify Species and Load new Assembly (Genome/Transcriptome) =>  taxonomy:list, sequence:load
-Load Concordance Set for new Assembly => concordance:load

If Transcriptome Load Blast
-Identify/Create BlastDatabase => taxonomy:list, blast:list_db, blast:create_db
-Load Blast Report(s) => blast:create_run
-- Restart Prod After blast report load (Class cache for blasts needs reload)
-dump blast db => sequence:dump_features
--formatdb -i file -p T/F -o T  (in lib/data/blastdb)

Load Samples
-Identify/Create Group => group:list, UI
-Load Samples => experiment:create
-load Expression => expression:load


----------------
Common Commands
----------------

- Print bam Names in Dir

	ls lib/data/ohlrogge/camelina/ | grep "bam" | awk '{gsub(".bam","");print $0}' | xargs
	
- Load Multiple Experiments and Expression
	
	LIBS="one two three";for x in $LIBS; do echo $x; thor experiment:create -t RnaSeq -n $x -a 10063 -c 10003 -g "Ohlrogge Lab" -d "$x Ohlrogge Lab CLC 6.0" -f Bam:lib/data/ohlrogge/camelina/$x.bam; thor expression:load lib/data/ohlrogge/camelina/$x.csv -e $x -f 'Mrna' -c 4 -n 2 -h -d lib/data/ohlrogge/camelina/csv_concordance --no_index; done
 
- Run a blastx

	blastall -p blastx -d /data/blastdb/swissprot -i contigs.fasta -e 10e-10 -o uniprot.xml -v 25 -b 25 -a 8 -m 7 -V F -f 14 -F "m S" &

----------------
Before Loading Sequence
----------------

Load the ncbi taxonomy tree if it has not beed done yet.

	thor taxonomy:load


Find the taxon Id for your sequence.

	thor taxonomy:find "Escherichia coli" --rank 'species'
	
	-	-	TaxonID	Rank	Name	Name Class
		0)	444	species	Escherichia coli	scientific name
	

Try to find a strain also

	thor taxonomy:find "MG1655"
	
	-	-	TaxonID	Rank	Name	Name Class
		0)	442828	no rank	Escherichia coli MG1655	synonym
		1)	442828	no rank	Escherichia coli str. K-12 substr. MG1655	scientific name
		
----------------
Loading A Genome
----------------

It is pretty simple to load a genome from a Genbank file.

	thor sequence:load my_genome.gbk

For more information about each sequence as it's loaded use the verbose flag
	
	thor sequence:load my_genome.gbk --verbose
	
----------------
Loading A Transcriptome
----------------

Transcriptomes generally need more user input. Here are the command line in parts.

-The --transcriptome flag is used to distinguish between Genome and Transcriptome in the listing 
-A Transcriptome is probably in Fasta format so it would start something like this

	thor sequence:load transcriptome_sequence_file.fa --transcriptome

- Now add the species and/or strain information
- A Genbank file should define this but Fasta will not
- If no strain_id is available thats okay, it will default to the species_id.

	--species_id 444 --strain_id 442828
		
- For expression data you need a feature for every sequence, say an mRNA or Gene.
- A Genbank might have these already but Fasta will not
	
	--add_entry_feature 'mRNA'

- Fasta does not define the division or molecule type either.
- The load will fail with several options displayed to choose from
- You might use "HTC - unfinished high-throughput cDNA sequencing" and "mRNA - A cDNA sequence derived from mRNA"

	--division 'HTC' --molecule_type 'mRNA'
	
- You might want to clean up the contig names from your assembly.
- Supply a prefix to renumber_contigs and they will be numbered sequentially
- outputs  prefix + 6 digit renumber .i.e   Prefix000001, Prefix999001

	--renumber-contigs M01

- The default source for all annotaitons is "EMBL/GenBank/SwissProt"
- If your sequence is from a custom assembly or different database give it a custom source
- Source names are displayed in the app and used to distinguish annotation sets

	--source_name 'LabName'

- The verbose output might be too much information for a transcriptome.
- You can supply show_percent to get a simple progress meter instead

	--show_percent

- If you are adding a new Version of an existing species/strain you need to make sure it has a unique version

  --version "TAIR10"

- The Final Transcriptome Load line for a custom E. Coli MG1655 assembly

thor sequence:load sequence_file.fa --transcriptome --species_id 444 --strain_id 442828 --add_entry_feature 'mRNA' --division 'HTC'  --molecule_type 'mRNA' --renumber-contigs M01 --source 'LabName' --show_percent

----------------
Loading A Concordance Set
----------------

After loading sequence data you need to load a Concordance Set before samples will work properly.
An Assembly can have more than one Concordance Set and samples are assigned one when loaded. The
Set is used to lookup reference_names for the sample.

The sequence loader generates a concordance file for but you can use any concordance data that 
matches your samples. The file is a simple tab-delimited format with one line per sequence and
two columns: OutsideSampleId	DatabaseAccession

First find out the assembly id for your species / strain / version

	thor taxonomy:list
	
	There are 2 assemblies in the database
	-	-	ID	Species	Strain > Version	entries
		0)	1	Arabidopsis thaliana	Arabidopsis thaliana > TAIR9	7
		1)	2	Escherichia coli	Escherichia coli str. K-12 substr. MG1655 > 2	1
		
Then add a concordance set to the assembly. Give it an appropriate name

	thor concordance:load sequence_file.fa.concordance --assembly_id 2 --name 'labIds'

You can list stored concordance sets to get more information

	thor concordance:list
	
----------------
Loading A Blast Database
----------------
The Blast Database is loaded for Blast Reports or Assemblies and allows users to run custom blasts.
It can be created through the UI at admin/blast_databases or command line with thor:

	thor blast:create_db --link 'www.outside_url.com/sequence/direct/link/' --abbreviation 'blast_db2' --description 'New Blast database' --taxon_id 444

You can list stored databases to get more information

	thor blast:list_db

----------------
Loading Blast Reports
----------------

Blast Reports can be added to the features of an assembly. They are tied to
a Blast Database. They also need an assembly_id and the type of feature

If the id's in a blast file do not match the locus tags in the database, supply a concordance file
	
	--concordance 

	thor blast:create_run blast.xml --assembly_id 3 --feature_type 'mRNA' -b 2
	
You can list stored runs to get more information

	thor blast:list_run
	
----------------
Loading Samples
----------------

Samples can be loaded through the UI or command line.

To use thor you must supply a sample type, unique name, assembly_id and concordance_set_id

thor experiment:create --name 'sample_1' -description 'tissue_ dpa_ etc..' --type RnaSeq --assembly_id 3 --concordance_set_id 5 --data Bam:path/to/myfile.bam --group 'MyGroup'

----------------
Loading Expression
----------------