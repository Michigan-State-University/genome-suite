----------------
General Process for New Data
----------------
Load Sequence
-Identify Species and Load new Assembly (Genome/Transcriptome) =>  taxonomy:find, sequence:load
-Load Concordance Set for new Assembly => concordance:load

If Transcriptome Load Blast
-Identify/Create BlastDatabase => assembly:list, blast:list_db, blast:create_db
-Load Blast Report(s) => blast:create_run
-- Restart Prod After blast report load (Class cache for blasts needs reload)
-dump blast db => sequence:dump_features
--formatdb -i file -p T/F -o T  (in lib/data/blastdb)

Load Samples
-Identify/Create Group => group:list, UI
-Load Samples => sample:create
-load Expression => expression:load


----------------
Common Commands
----------------
- Print bam Names in Dir

	ls ./ | grep "bam" | awk '{gsub(".bam","");print $0}' | xargs
	
- Load Multiple Samples and Expression
	
	LIBS="one two three";  	//All sample names minus '.bam' '.csv'
	ASM_ID=1001;  			//Assembly id
	CONCORD_ID=1001;		//Sample concordance id
	CONCORD_FILE=concordance.txt; //Concordance file for expression
	C_COL=5; //Counts column in csv
	U_COL=4; //Unique counts column
	
	for x in $LIBS; do echo $x; thor sample:create -t RnaSeq -n $x -a $ASM_ID -c $CONCORD_ID -g "admin" -f Bam:./$x.bam; thor expression:load ./$x.csv -e $x -a $ASM_ID -f 'Mrna' -u $U_COL -c $C_COL -n 2 -h -d $CONCORD_FILE --no_index; done
 
- Run a blastx

	blastall -p blastx -d /data/blastdb/swissprot -i contigs.fasta -e 10e-10 -o uniprot.xml -v 25 -b 25 -a 8 -m 7 -V F -f 14 -F "m S" &

----------------
Before Loading Sequence
----------------
Load the ncbi taxonomy tree if it has not beed done yet.

	thor taxonomy:load


Find the taxon Id for your sequence.

	thor taxonomy:find "Escherichia coli" --rank 'species'
	
	-	-	TaxonID	Rank	Name	Name Class
		0)	444	species	Escherichia coli	scientific name
	

Try to find a strain also

	thor taxonomy:find "MG1655"
	
	-	-	TaxonID	Rank	Name	Name Class
		0)	442828	no rank	Escherichia coli MG1655	synonym
		1)	442828	no rank	Escherichia coli str. K-12 substr. MG1655	scientific name
		
----------------
Loading A Genome
----------------
It is pretty simple to load a genome from a Genbank file.

	thor sequence:load my_genome.gbk

For more information about each sequence as it's loaded use the verbose flag
	
	thor sequence:load my_genome.gbk --verbose
	
----------------
Loading A Transcriptome
----------------
Transcriptomes generally need more user input. Here are the command line in parts.

-The --transcriptome flag is used to distinguish between Genome and Transcriptome in the listing 
-A Transcriptome is probably in Fasta format so it would start something like this

	thor sequence:load transcriptome_sequence_file.fa --transcriptome

- Now add the species and/or strain information
- A Genbank file should define this but Fasta will not
- If no strain_id is available thats okay, it will default to the species_id.

	--species_id 444 --strain_id 442828
		
- For expression data you need a feature for every sequence, say an mRNA or Gene.
- A Genbank might have these already but Fasta will not
	
	--add_entry_feature 'mRNA'

- Fasta does not define the division or molecule type either.
- The load will fail with several options displayed to choose from
- You might use "HTC - unfinished high-throughput cDNA sequencing" and "mRNA - A cDNA sequence derived from mRNA"

	--division 'HTC' --molecule_type 'mRNA'
	
- You might want to clean up the contig names from your assembly.
- Supply a prefix to renumber_contigs and they will be numbered sequentially
- outputs  prefix + 6 digit renumber .i.e   Prefix000001, Prefix999001

	--renumber-contigs M01

- The default source for all annotaitons is "EMBL/GenBank/SwissProt"
- If your sequence is from a custom assembly or different database give it a custom source
- Source names are displayed in the app and used to distinguish annotation sets

	--source_name 'LabName'

- The verbose output might be too much information for a transcriptome.
- You can supply show_percent to get a simple progress meter instead

	--show_percent

- If you are adding a new Version of an existing species/strain you need to make sure it has a unique version

  --version "TAIR10"

- The Final Transcriptome Load line for a custom E. Coli MG1655 assembly

thor sequence:load sequence_file.fa --transcriptome --species_id 444 --strain_id 442828 --add_entry_feature 'mRNA' --division 'HTC'  --molecule_type 'mRNA' --renumber-contigs M01 --source 'LabName' --show_percent

----------------
Loading A Concordance Set
----------------
A default concordance set will be created using sequence accessions. If your sample data is
not correlated to the sequence accession, you need to load a new Concordance Set.
An Assembly can have multiple Concordance Sets. They are assigned to samples to lookup reference names.

If you use the --prefix option the sequence loader will generate a concordance file. The file is a simple tab-delimited format with one line per sequence and two columns: OutsideSampleId	DatabaseAccession

First find out the assembly id for your species / strain / version

	thor assembly:list
		
Then add a concordance set to the assembly. Give it an appropriate name

	thor concordance:load sequence_file.fa.concordance --assembly_id 2 --name 'labIds'

You can list stored concordance sets to get more information

	thor concordance:list
	
----------------
Loading A Blast Database
----------------
The Blast Database is loaded for Blast Reports or Assemblies and allows users to run custom blasts.
It can be created through the UI at admin/blast_databases or command line with:

	thor blast:create_db --link 'www.outside_url.com/sequence/direct/link/' --abbreviation 'blast_db2' --description 'New Blast database' --taxon_id 444

You can list stored databases to get more information

	thor blast:list_db

----------------
Loading Blast Reports
----------------
Blast Reports can be added to the features of an assembly. They are tied to
a Blast Database. They also need an assembly_id and the type of feature

If the id's in a blast file do not match the locus tags in the database, supply a concordance file
	
	--concordance 

	thor blast:create_run blast.xml --assembly_id 3 --feature_type 'mRNA' -b 2
	
You can list stored runs to get more information

	thor blast:list_run
	
----------------
Loading Samples
----------------
Samples can be loaded through the UI or command line.

To use thor you must supply a sample type, unique name, assembly_id and concordance_set_id

	thor sample:create --data Bam:path/to/myfile.bam --name 'sample_1' --type RnaSeq --assembly_id 3 --concordance_set_id 5
	
You can also add a description or group name
	-description 'tissue dpa' --group 'MyGroup'

----------------
Loading Expression
----------------
Expression data for a sample is loaded from the command line. The sample must already exist and there must be annotations
with a locus_tag on the sample's bioentry. The loader expects 3 columns. Id, Count, and Normalized Count. They can be tab or comma delimited.

Supply the command with the expression file and sample name or ID.
	
	thor expression:load sample_1.csv -e sample_1

If the ids in the file don't match locus tags in the database supply a concordance file
	
	-d csv_concordance

Expression will work on Gene annotations by default. To use a different annotation supply use:
	
	-f 'Mrna'
	
By default the columns are id, count, and normalized count in order (1,2,3) to change this pass:	
	
	-i 1 -c 4 -n 2
	
Add the -h flag to note a header that needs skipping. And use the --no-index flag to skip indexing (for bulk loads)
	
	-h --no_index